# Generated by Django 3.2.8 on 2021-10-29 12:08

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='APIManage',
            fields=[
                ('id', models.AutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('APItype', models.CharField(blank=True, help_text='接口类型', max_length=200, null=True, verbose_name='接口类型')),
                ('name', models.CharField(blank=True, help_text='名称', max_length=50, null=True, verbose_name='名称')),
                ('url', models.CharField(blank=True, help_text='路由地址', max_length=200, null=True, verbose_name='路由地址')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': 'API接口权限管理',
                'verbose_name_plural': 'API接口权限管理',
                'db_table': 'system_api_manage',
                'ordering': ('-create_datetime',),
            },
        ),
        migrations.CreateModel(
            name='FileManage',
            fields=[
                ('id', models.AutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('filetype', models.CharField(blank=True, help_text='文件类型', max_length=200, null=True, verbose_name='文件类型')),
                ('name', models.CharField(blank=True, help_text='名称', max_length=50, null=True, verbose_name='名称')),
                ('path', models.CharField(blank=True, help_text='文件路径', max_length=200, null=True, verbose_name='文件路径')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '文件权限管理',
                'verbose_name_plural': '文件权限管理',
                'db_table': 'system_file_manage',
                'ordering': ('-create_datetime',),
            },
        ),
        migrations.CreateModel(
            name='ImgList',
            fields=[
                ('id', models.AutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('name', models.CharField(blank=True, help_text='名称', max_length=50, null=True, verbose_name='名称')),
                ('url', models.ImageField(help_text='图片路径', upload_to='imgs/%Y%m%d/', verbose_name='图片路径')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '图片管理',
                'verbose_name_plural': '图片管理',
                'db_table': 'system_img_list',
                'ordering': ('-create_datetime',),
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('username', models.CharField(db_index=True, help_text='用户账号', max_length=150, unique=True, verbose_name='用户账号')),
                ('email', models.EmailField(blank=True, help_text='邮箱', max_length=255, null=True, verbose_name='邮箱')),
                ('mobile', models.CharField(blank=True, help_text='电话', max_length=255, null=True, verbose_name='电话')),
                ('avatar', models.ImageField(blank=True, help_text='头像', null=True, upload_to='imgs/%Y%m%d/', verbose_name='头像')),
                ('name', models.CharField(help_text='姓名', max_length=40, verbose_name='姓名')),
                ('gender', models.IntegerField(blank=True, choices=[(0, '女'), (1, '男')], help_text='性别', null=True, verbose_name='性别')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('APIToUser', models.ManyToManyField(blank=True, to='AuthorityManage.APIManage')),
                ('FileToUser', models.ManyToManyField(blank=True, to='AuthorityManage.FileManage')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': '用户表',
                'db_table': 'system_users',
                'ordering': ('create_datetime',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('APIToGroups', models.ManyToManyField(blank=True, to='AuthorityManage.APIManage')),
                ('FileToGroups', models.ManyToManyField(blank=True, to='AuthorityManage.FileManage')),
            ],
            options={
                'verbose_name': '分组表',
                'verbose_name_plural': '分组表',
                'db_table': 'system_groups',
                'ordering': ('create_datetime',),
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
    ]
